
Ast => Ast Function 
Ast => Function

Function => ident : ReturnTypes Scope 

Types => Types -> ( ident : ident )
Types => ( ident : ident ) 

ReturnTypes => Types -> ident 
ReturnTypes => ident
ReturnTypes => ( )

Scope => Scope Stm 
Scope => Stm

Stm => let ident = Exp in
Stm => return Exp


Exp => ident Fparams
Exp => Exp Op Term 
Exp => Term 

Fparams => Exp Fparams
Fparams => ( )

Op => plus 
Op => minus 

Term => ( Exp ) 
Term => literal 
Term => ident


